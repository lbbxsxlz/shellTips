sudo systemctl reboot
sudo systemctl poweroff
# Stop CPU
sudo systemctl halt
sudo systemctl suspend
sudo systemctl hibernate
sudo systemctl hybrid-sleep
# Rescue mode
sudo systemctl rescue

# Be similar uptime
systemd-analyze
# Startup time of each service
systemd-analyze blame
# Show the flow of startup
systemd-analyze critical-chain
systemd-analyze critical-chain atd.service


systemctl list-units
systemctl list-units --all
systemctl list-units --all --state=inactive
systemctl list-units --failed
systemctl list-units --type=service

systemctl status
sysystemctl status bluetooth.service
systemctl is-active application.service
systemctl is-failed application.service
systemctl is-enabled application.service

sudo systemctl start apache.service
sudo systemctl stop apache.service
sudo systemctl restart apache.service
sudo systemctl kill apache.service
sudo systemctl reload apache.service
sudo systemctl daemon-reload
# Show the arguments of Unit
systemctl show httpd.service
# Show the assigned argument of Unit
systemctl show -p CPUShares httpd.service
sudo systemctl set-property httpd.service CPUShares=500

sudo systemctl enable clamd@scan.service
sudo ln -s '/usr/lib/systemd/system/clamd@scan.service' '/etc/systemd/system/multi-user.target.wants/clamd@scan.service'

sudo systemctl disable clamd@scan.service

systemctl list-dependencies nginx.service
systemctl list-dependencies --all nginx.service

systemctl list-unit-files
systemctl list-unit-files --type=service

sudo systemctl daemon-reload
sudo systemctl restart httpd.service
systemctl cat atd.service

hostnamectl
sudo hostnamectl set-hostname rhel7

localectl
sudo localectl set-locale LANG=en_GB.utf8
sudo localectl set-keymap en_GB

timedatectl
timedatectl list-timezones  
sudo timedatectl set-timezone America/New_York
sudo timedatectl set-time YYYY-MM-DD
sudo timedatectl set-time HH:MM:SS

loginctl list-sessions
loginctl list-users
loginctl show-user ruanyf



# launch a service at Startup with systemd
 sudo vim /etc/systemd/system/example.service
 `
 [Unit]
Description=It is a example to launch a service at Startup

Wants=network.target
After=syslog.target network-online.target

[Service]
Type=simple
ExecStart=/usr/bin/example
Restart=on-failure
RestartSec=10
KillMode=process

[Install]
WantedBy=multi-user.target
 `
sudo chmod 640 /etc/systemd/system/example.service
sudo systemctl daemon-reload
sudo systemctl enable example or sudo ln -sf /etc/systemd/system/multi-user.target.wants/example.service /etc/systemd/system/example.service
sudo systemctl start example
